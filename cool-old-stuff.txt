Cool old stuff from other branches that I might want to use later


// This might (and almost definitely will) come in handy later :)
void GetScreenSize(int* rows, int* columns) {
	static struct winsize w;
	ioctl(0, TIOCGWINSZ, &w);
	*rows = w.ws_row;
	*columns = w.ws_col;
}

// This was a joke, from the very first version... might not hang on to it,
// but on the other hand it would kinda funny to add FRE() later :D
uint64_t GetBytesFree() {
	return sysconf(_SC_PHYS_PAGES) * sysconf(_SC_PAGE_SIZE);
}

// In 0.4-alt, this got the auto-run file - a feature I want
// to add for a future 1.x release
void get_autorun_file(char* path) {
	char home[512], username[80];
	memset(home, 0, 512);
	strncpy(home, "/home/", 512);
	struct passwd *pwd = getpwuid(getuid());
	if (getlogin_r(username, 80) == 0) {
		strncat(home, username, 512 - strlen(home));
		strncat(home, "/breakaway.bas", 512 - strlen(home));
		if (access(home, F_OK) == 0) {
			strncpy(path, home, 512);
			return;
		}
	}
	else if (pwd) {
		strncat(home, pwd->pw_name, 512 - strlen(home));
		strncat(home, "/breakaway.bas", 512 - strlen(home));
		strncpy(path, home, 512);
	}
	else strncpy(path, "/etc/breakaway.bas", 512);
}

/* See https://gist.github.com/dagon666/8194870 */
void SetBlocking(bool setting) {
	is_blocking = setting;
	struct termios t;
	tcgetattr(STDIN_FILENO, &t);
	if (setting) {
		t.c_lflag |= ICANON;
		t.c_lflag |= ECHO;
		fcntl(0, F_SETFL, fcntl(STDIN_FILENO, F_GETFL) & ~O_NONBLOCK);
	}
	else {
		t.c_lflag &= ~ICANON;
		t.c_lflag &= ~ECHO;
		fcntl(0, F_SETFL, O_NONBLOCK);
	}
	tcsetattr(STDIN_FILENO, TCSANOW, &t);
}

